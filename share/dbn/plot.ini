# MODEL WEIGHT GRAPH

[plot dbn.default]
package = layergraph
class = weightGraph
params:
  edge_weight = 'weights',
  edge_color = True,
  node_caption = 'performance',
  edge_threshold = 0.0,
  edge_zoom = 2.0

[plot dbn.adjacency.graph]
package = layergraph
class = adjacencyGraph
params:
  edge_weight = 'adjacency'

[plot dbn.weight.graph]
package = layergraph
class = weightGraph
params:
  edge_weight = 'weights',
  edge_color = True,
  node_caption = 'performance',
  edge_threshold = 0.0,
  edge_zoom = 2.0

# DIMENSIONALITY REDUCTION VALIDATION

[plot correlation.heatmap]
package = heatmap
class = unitRelation
params:
  relation = "correlation()",
  preprocessing = 'corrStableFilter',
  statistics = 100000

[plot correlation.histogram]
package = histogram
class = unitRelation
params:
  relation = "correlation()",
  preprocessing = 'corrStableFilter',
  statistics = 100000

# PREDICTION OF INTERACTIONS

[plot interaction.heatmap]
package = heatmap
class = unitRelation
params:
  relation = "causality(modify = 'knockout', eval = 'performance', transform = '-M')",
  statistics = 100000

[plot interaction.histogram]
package = histogram
class = unitRelation
params:
  relation = "causality(modify = 'knockout', eval = 'performance', transform = '-M')",
  statistics = 100000

# PREDICTION OF INTERACTION DIRECTIONS

[plot direction.heatmap]
package = heatmap
class = unitRelation
params:
  relation = "causality(measure = 'intperformance', modify = 'knockout', transform = '-(M - M.T)')",
  statistics = 100000

[plot direction.histogram]
package = histogram
class = unitRelation
params:
  relation = "causality(measure = 'intperformance', modify = 'knockout', transform = '-(M - M.T)')",
  statistics = 100000

# PREDICTION OF INTERACTION STRENGTHS

[plot connection.heatmap]
package = heatmap
class = unitRelation
params:
  relation = "causality(measure = 'extperformance', modify = 'knockout', transform = '-(M + M.T)')",
  statistics = 100000

[plot connection.histogram]
package = histogram
class = unitRelation
params:
  relation = "causality(measure = 'extperformance', modify = 'knockout', transform = '-(M + M.T)')",
  statistics = 100000


